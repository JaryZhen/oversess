<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	    http://www.springframework.org/schema/aop 
	    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	    http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
	">
    <import resource="conf/adsDao.xml" />
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:log4j.properties</value>
				<value>classpath:memcache.properties</value>
				<value>classpath:mysql.properties</value>
				<value>classpath:redis.properties</value>
			</list>
		</property>
	</bean>

	<bean name="memcachedClientBuilder" class="net.rubyeye.xmemcached.XMemcachedClientBuilder">
		<constructor-arg>
			<list>
				<bean class="java.net.InetSocketAddress">
					<constructor-arg>
						<value>${xmemcache.host}</value>
					</constructor-arg>
					<constructor-arg>
						<value>${xmemcache.port}</value>
					</constructor-arg>
				</bean>
				<bean class="java.net.InetSocketAddress">
					<constructor-arg>
						<value>${xmemcache.host}</value>
					</constructor-arg>
					<constructor-arg>
						<value>${xmemcache.port2}</value>
					</constructor-arg>
				</bean>
			</list>
		</constructor-arg>
		<constructor-arg>
			<list>
				<value>1</value>
				<value>1</value>
			</list>
		</constructor-arg>
		<property name="connectionPoolSize">
			<value>${xmemcache.connection.pool}</value>
		</property>
		<property name="commandFactory">
			<bean class="net.rubyeye.xmemcached.command.BinaryCommandFactory"></bean>
		</property>
		<property name="sessionLocator">
			<bean class="net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator"></bean>
		</property>
		<property name="transcoder">
			<bean class="net.rubyeye.xmemcached.transcoders.SerializingTranscoder" />
		</property>
	</bean>
	<bean name="memcachedClient" factory-bean="memcachedClientBuilder"
		factory-method="build" destroy-method="shutdown" />

	<bean id="redisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.maxTotal}" />
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>
	<!--

	<bean id="redisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="poolConfig" ref="redisPoolConfig" />
	</bean>
	-->
	<bean id="redisConnectionFactory" class="com.oversea.factory.RedisConfig">
		<property name="host" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="jedisPoolConfig" ref="redisPoolConfig" />
	</bean>
	
	<bean id="redisClient" class="com.oversea.factory.OverseaRedisFactory">
		<property name="redisConfig"  ref="redisConnectionFactory" />
	</bean>

	
    
    
    	<!-- 要调用的工作类 -->

	
	<bean id="DBstatisJob" class="com.oversea.ads.statis.OverseaStatisJob"></bean>
	<!-- Tapjoy -->
	
	<bean id="Db_TrackTask"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="DBstatisJob" />
		</property>
		<property name="targetMethod">
			<value>updat_Db_Track</value>
		</property>
	</bean>

	<bean id="doDb_Track"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="Db_TrackTask" />
		</property>
		<property name="cronExpression">
			<value>50 2/29 * * * ?</value>
		</property>
	</bean> 
	
	
	<bean id="startQuertz" lazy-init="false" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
		
			    <ref bean="doDb_Track" />
				 
			</list>
		</property>
	</bean>
	
	
	
<!-- 总管理类结束   -->
</beans>